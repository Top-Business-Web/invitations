<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit0ea87b391f0d05f4289f74cd917f6de3
=======
class ComposerAutoloaderInit2db3f78e776619695989ef66b3427dbb
>>>>>>> 790bf12bb367d847ec2dd342a47433ee034842ad
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    /**
     * @return \Composer\Autoload\ClassLoader
     */
    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit0ea87b391f0d05f4289f74cd917f6de3', 'loadClassLoader'), true, true);
=======
        spl_autoload_register(array('ComposerAutoloaderInit2db3f78e776619695989ef66b3427dbb', 'loadClassLoader'), true, true);
>>>>>>> 790bf12bb367d847ec2dd342a47433ee034842ad
        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(__DIR__));
        spl_autoload_unregister(array('ComposerAutoloaderInit2db3f78e776619695989ef66b3427dbb', 'loadClassLoader'));

        require __DIR__ . '/autoload_static.php';
        call_user_func(\Composer\Autoload\ComposerStaticInit2db3f78e776619695989ef66b3427dbb::getInitializer($loader));

        $loader->register(true);

<<<<<<< HEAD
        $filesToLoad = \Composer\Autoload\ComposerStaticInit0ea87b391f0d05f4289f74cd917f6de3::$files;
        $requireFile = \Closure::bind(static function ($fileIdentifier, $file) {
            if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
                $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;

                require $file;
            }
        }, null, null);
        foreach ($filesToLoad as $fileIdentifier => $file) {
            $requireFile($fileIdentifier, $file);
=======
        $includeFiles = \Composer\Autoload\ComposerStaticInit2db3f78e776619695989ef66b3427dbb::$files;
        foreach ($includeFiles as $fileIdentifier => $file) {
            composerRequire2db3f78e776619695989ef66b3427dbb($fileIdentifier, $file);
>>>>>>> 790bf12bb367d847ec2dd342a47433ee034842ad
        }

        return $loader;
    }
}
<<<<<<< HEAD
=======

/**
 * @param string $fileIdentifier
 * @param string $file
 * @return void
 */
function composerRequire2db3f78e776619695989ef66b3427dbb($fileIdentifier, $file)
{
    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {
        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;

        require $file;
    }
}
>>>>>>> 790bf12bb367d847ec2dd342a47433ee034842ad
